{"version":3,"sources":["auth/AuthContext.js","types/types.js","components/login/LoginScreen.js","components/ui/NavBar.js","data/heroes.js","components/heroes/HeroCard.js","components/heroes/HeroList.js","selectors/getHeroesByPublisher.js","components/marvel/MarvelScreen.js","components/heroes/HeroScreen.js","selectors/getHeroesById.js","components/dc/DsScreen.js","components/search/SearchScreen.js","hooks/useForm.js","selectors/getHeroesByName.js","routers/DashboardRoutes.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","auth/authReducer.js","HeroesApp.js","index.js"],"names":["AuthContext","createContext","require","types","LoginScreen","history","dispatch","useContext","className","onClick","lastPath","localStorage","getItem","type","payload","name","replace","Navbar","user","useHistory","to","activeClassName","exact","action","heroes","HeroCard","id","superhero","alter_ego","first_appearance","characters","style","maxWidth","src","alt","HeroList","publisher","useMemo","includes","Error","filter","hero","getHeroesByPublisher","map","key","MarvelScreen","HeroScreen","heroeId","useParams","find","getHeroesById","length","push","goBack","DsScreen","SearchScreen","location","useLocation","queryString","parse","search","q","console","log","initialState","useState","formValues","setFormValues","reset","handleInputChange","target","value","useForm","searchText","heroesFiltered","toLocaleLowerCase","getHeroesByName","onSubmit","e","preventDefault","placeholder","autoComplete","onChange","DashboardRoutes","path","component","PrivateRoute","isAuthenticated","Component","rest","setItem","pathname","props","PublicRoute","AppRouter","logged","authReducer","state","init","JSON","HeroesApp","useReducer","useEffect","stringify","Provider","ReactDOM","render","document","getElementById"],"mappings":"oNAEaA,GAAcC,EAFDC,EAAQ,GAA1BD,iBCAKE,EACF,eADEA,EAED,gBCECC,EAAc,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAClBC,EAAYC,qBAAWP,GAAvBM,SAaP,OACI,yBAAKE,UAAU,kBACX,4CACA,4BAAQA,UAAU,kBAClBC,QAhBY,WAEhB,IAAMC,EAAWC,aAAaC,QAAQ,aAAe,IAOrDN,EANe,CACXO,KAAMV,EACNW,QAAS,CACLC,KAAK,cAIbV,EAAQW,QAAQN,KAKZ,WChBCO,EAAS,WAAO,IAAD,EACQV,qBAAWP,GAA9Be,EADW,EACjBG,KAAMH,KAAOT,EADI,EACJA,SACdD,EAAUc,cAUhB,OACI,yBAAKX,UAAU,+CAEX,kBAAC,IAAD,CACIA,UAAU,eACVY,GAAG,KAFP,gBAOA,yBAAKZ,UAAU,mBACX,yBAAKA,UAAU,cAEX,kBAAC,IAAD,CACIa,gBAAgB,SAChBb,UAAU,oBACVc,OAAK,EACLF,GAAG,WAJP,UASA,kBAAC,IAAD,CACIC,gBAAgB,SAChBb,UAAU,oBACVc,OAAK,EACLF,GAAG,OAJP,MAQA,kBAAC,IAAD,CACIC,gBAAgB,SAChBb,UAAU,oBACVc,OAAK,EACLF,GAAG,WAJP,YAWR,yBAAKZ,UAAU,yDACX,wBAAIA,UAAU,sBACV,0BAAMA,UAAU,qBACXO,GAEL,4BACIP,UAAU,wBACVc,OAAK,EACLF,GAAG,SACHX,QA1DC,WACjB,IAAMc,EAAS,CACXV,KAAMV,GAEVE,EAAQW,QAAQ,UAChBV,EAASiB,KAiDG,cC/DPC,EAAS,CAAC,CACf,GAAM,YACN,UAAa,SACb,UAAa,YACb,UAAa,cACb,iBAAoB,uBACpB,WAAc,eAElB,CACI,GAAM,cACN,UAAa,WACb,UAAa,YACb,UAAa,SACb,iBAAoB,mBACpB,WAAc,UAElB,CACI,GAAM,WACN,UAAa,QACb,UAAa,YACb,UAAa,cACb,iBAAoB,kBACpB,WAAc,oDAElB,CACI,GAAM,WACN,UAAa,gBACb,UAAa,YACb,UAAa,aACb,iBAAoB,0BACpB,WAAc,6FAElB,CACI,GAAM,WACN,UAAa,cACb,UAAa,YACb,UAAa,eACb,iBAAoB,sBACpB,WAAc,gBAElB,CACI,GAAM,YACN,UAAa,eACb,UAAa,YACb,UAAa,iBACb,iBAAoB,qBACpB,WAAc,kBAElB,CACI,GAAM,aACN,UAAa,oBACb,UAAa,YACb,UAAa,eACb,iBAAoB,wBACpB,WAAc,qBAElB,CACI,GAAM,WACN,UAAa,kBACb,UAAa,YACb,UAAa,eACb,iBAAoB,uBACpB,WAAc,gBAElB,CACI,GAAM,UACN,UAAa,cACb,UAAa,YACb,UAAa,aACb,iBAAoB,wBACpB,WAAc,qCAElB,CACI,GAAM,WACN,UAAa,eACb,UAAa,YACb,UAAa,cACb,iBAAoB,mBACpB,WAAc,4BAElB,CACI,GAAM,gBACN,UAAa,aACb,UAAa,gBACb,UAAa,eACb,iBAAoB,sBACpB,WAAc,gBAElB,CACI,GAAM,iBACN,UAAa,kBACb,UAAa,gBACb,UAAa,eACb,iBAAoB,4BACpB,WAAc,gBAElB,CACI,GAAM,cACN,UAAa,WACb,UAAa,gBACb,UAAa,aACb,iBAAoB,wBACpB,WAAc,cAElB,CACI,GAAM,cACN,UAAa,OACb,UAAa,gBACb,UAAa,eACb,iBAAoB,0BACpB,WAAc,gBAElB,CACI,GAAM,cACN,UAAa,OACb,UAAa,gBACb,UAAa,eACb,iBAAoB,yBACpB,WAAc,gBAElB,CACI,GAAM,mBACN,UAAa,YACb,UAAa,gBACb,UAAa,gBACb,iBAAoB,2BACpB,WAAc,iBAElB,CACI,GAAM,mBACN,UAAa,YACb,UAAa,gBACb,UAAa,0BACb,iBAAoB,eACpB,WAAc,2BAElB,CACI,GAAM,iBACN,UAAa,UACb,UAAa,gBACb,UAAa,yBACb,iBAAoB,wBACpB,WAAc,0BAElB,CACI,GAAM,iBACN,UAAa,UACb,UAAa,gBACb,UAAa,gBACb,iBAAoB,WACpB,WAAc,iBAElB,CACI,GAAM,gBACN,UAAa,gBACb,UAAa,gBACb,UAAa,cACb,iBAAoB,yBACpB,WAAc,gBC3JTC,EAAW,SAAC,GAMlB,IALHC,EAKE,EALFA,GACAC,EAIE,EAJFA,UACAC,EAGE,EAHFA,UACAC,EAEE,EA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","file":"static/js/main.c89e0cc2.chunk.js","sourcesContent":["const { createContext } = require(\"react\");\r\n\r\nexport const AuthContext = createContext();","export const types = {\r\n    login: '[auth] login',\r\n    logout: '[auth] logout',\r\n}","import React, { useContext } from 'react'\r\nimport { AuthContext } from '../../auth/AuthContext'\r\nimport { types } from '../../types/types';\r\n\r\nexport const LoginScreen = ({history}) => {\r\n    const {dispatch} = useContext(AuthContext);\r\n    const handleLogin = () =>{\r\n     //   history.push('/'); push conserva la historia, history.replace borrar el historial\r\n        const lastPath = localStorage.getItem('lastPath') || '/';\r\n        const action = {\r\n            type: types.login,\r\n            payload: {\r\n                name:'cristian'\r\n            }\r\n        }\r\n        dispatch(action);\r\n        history.replace(lastPath);\r\n    }\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <h1>Login Screen</h1>\r\n            <button className=\"btn btn-primary\"\r\n            onClick={handleLogin}>\r\n                Login\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { Link, NavLink, useHistory } from 'react-router-dom';\r\nimport { AuthContext } from '../../auth/AuthContext';\r\nimport { types } from '../../types/types';\r\n\r\nexport const Navbar = () => {\r\n    const {user:{name}, dispatch} = useContext(AuthContext);\r\n    const history = useHistory();\r\n\r\n    const handleLogout = ()=>{\r\n        const action = {\r\n            type: types.logout,\r\n        }\r\n        history.replace('/login');\r\n        dispatch(action);\r\n    }\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n            \r\n            <Link \r\n                className=\"navbar-brand\" \r\n                to=\"/\"\r\n            >\r\n                Asociaciones\r\n            </Link>\r\n\r\n            <div className=\"navbar-collapse\">\r\n                <div className=\"navbar-nav\">\r\n\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/marvel\"\r\n                    >\r\n                        Marvel\r\n                    </NavLink>\r\n\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/dc\"\r\n                    >\r\n                        DC\r\n                    </NavLink>\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/search\"\r\n                    >\r\n                        Search\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"navbar-collapse collapse w-100 order-3 dual-collapse2\">\r\n                <ul className=\"navbar-nav ml-auto\">\r\n                    <span className=\"nav-item nav-link\">\r\n                        {name}\r\n                    </span>\r\n                    <button \r\n                        className=\"nav-item nav-link btn\" \r\n                        exact\r\n                        to=\"/login\"\r\n                        onClick={handleLogout}\r\n                    >\r\n                        Logout\r\n                    </button>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","export const heroes = [{\r\n        'id': 'dc-batman',\r\n        'superhero': 'Batman',\r\n        'publisher': 'DC Comics',\r\n        'alter_ego': 'Bruce Wayne',\r\n        'first_appearance': 'Detective Comics #27',\r\n        'characters': 'Bruce Wayne'\r\n    },\r\n    {\r\n        'id': 'dc-superman',\r\n        'superhero': 'Superman',\r\n        'publisher': 'DC Comics',\r\n        'alter_ego': 'Kal-El',\r\n        'first_appearance': 'Action Comics #1',\r\n        'characters': 'Kal-El'\r\n    },\r\n    {\r\n        'id': 'dc-flash',\r\n        'superhero': 'Flash',\r\n        'publisher': 'DC Comics',\r\n        'alter_ego': 'Jay Garrick',\r\n        'first_appearance': 'Flash Comics #1',\r\n        'characters': 'Jay Garrick, Barry Allen, Wally West, Bart Allen'\r\n    },\r\n    {\r\n        'id': 'dc-green',\r\n        'superhero': 'Green Lantern',\r\n        'publisher': 'DC Comics',\r\n        'alter_ego': 'Alan Scott',\r\n        'first_appearance': 'All-American Comics #16',\r\n        'characters': 'Alan Scott, Hal Jordan, Guy Gardner, John Stewart, Kyle Raynor, Jade, Sinestro, Simon Baz'\r\n    },\r\n    {\r\n        'id': 'dc-arrow',\r\n        'superhero': 'Green Arrow',\r\n        'publisher': 'DC Comics',\r\n        'alter_ego': 'Oliver Queen',\r\n        'first_appearance': 'More Fun Comics #73',\r\n        'characters': 'Oliver Queen'\r\n    },\r\n    {\r\n        'id': 'dc-wonder',\r\n        'superhero': 'Wonder Woman',\r\n        'publisher': 'DC Comics',\r\n        'alter_ego': 'Princess Diana',\r\n        'first_appearance': 'All Star Comics #8',\r\n        'characters': 'Princess Diana'\r\n    },\r\n    {\r\n        'id': 'dc-martian',\r\n        'superhero': 'Martian Manhunter',\r\n        'publisher': 'DC Comics',\r\n        'alter_ego': 'J\\'onn J\\'onzz',\r\n        'first_appearance': 'Detective Comics #225',\r\n        'characters': 'Martian Manhunter'\r\n    },\r\n    {\r\n        'id': 'dc-robin',\r\n        'superhero': 'Robin/Nightwing',\r\n        'publisher': 'DC Comics',\r\n        'alter_ego': 'Dick Grayson',\r\n        'first_appearance': 'Detective Comics #38',\r\n        'characters': 'Dick Grayson'\r\n    },\r\n    {\r\n        'id': 'dc-blue',\r\n        'superhero': 'Blue Beetle',\r\n        'publisher': 'DC Comics',\r\n        'alter_ego': 'Dan Garret',\r\n        'first_appearance': 'Mystery Men Comics #1',\r\n        'characters': 'Dan Garret, Ted Kord, Jaime Reyes'\r\n    },\r\n    {\r\n        'id': 'dc-black',\r\n        'superhero': 'Black Canary',\r\n        'publisher': 'DC Comics',\r\n        'alter_ego': 'Dinah Drake',\r\n        'first_appearance': 'Flash Comics #86',\r\n        'characters': 'Dinah Drake, Dinah Lance'\r\n    },\r\n    {\r\n        'id': 'marvel-spider',\r\n        'superhero': 'Spider Man',\r\n        'publisher': 'Marvel Comics',\r\n        'alter_ego': 'Peter Parker',\r\n        'first_appearance': 'Amazing Fantasy #15',\r\n        'characters': 'Peter Parker'\r\n    },\r\n    {\r\n        'id': 'marvel-captain',\r\n        'superhero': 'Captain America',\r\n        'publisher': 'Marvel Comics',\r\n        'alter_ego': 'Steve Rogers',\r\n        'first_appearance': 'Captain America Comics #1',\r\n        'characters': 'Steve Rogers'\r\n    },\r\n    {\r\n        'id': 'marvel-iron',\r\n        'superhero': 'Iron Man',\r\n        'publisher': 'Marvel Comics',\r\n        'alter_ego': 'Tony Stark',\r\n        'first_appearance': 'Tales of Suspense #39',\r\n        'characters': 'Tony Stark'\r\n    },\r\n    {\r\n        'id': 'marvel-thor',\r\n        'superhero': 'Thor',\r\n        'publisher': 'Marvel Comics',\r\n        'alter_ego': 'Thor Odinson',\r\n        'first_appearance': 'Journey into Myster #83',\r\n        'characters': 'Thor Odinson'\r\n    },\r\n    {\r\n        'id': 'marvel-hulk',\r\n        'superhero': 'Hulk',\r\n        'publisher': 'Marvel Comics',\r\n        'alter_ego': 'Bruce Banner',\r\n        'first_appearance': 'The Incredible Hulk #1',\r\n        'characters': 'Bruce Banner'\r\n    },\r\n    {\r\n        'id': 'marvel-wolverine',\r\n        'superhero': 'Wolverine',\r\n        'publisher': 'Marvel Comics',\r\n        'alter_ego': 'James Howlett',\r\n        'first_appearance': 'The Incredible Hulk #180',\r\n        'characters': 'James Howlett'\r\n    },\r\n    {\r\n        'id': 'marvel-daredevil',\r\n        'superhero': 'Daredevil',\r\n        'publisher': 'Marvel Comics',\r\n        'alter_ego': 'Matthew Michael Murdock',\r\n        'first_appearance': 'Daredevil #1',\r\n        'characters': 'Matthew Michael Murdock'\r\n    },\r\n    {\r\n        'id': 'marvel-hawkeye',\r\n        'superhero': 'Hawkeye',\r\n        'publisher': 'Marvel Comics',\r\n        'alter_ego': 'Clinton Francis Barton',\r\n        'first_appearance': 'Tales of Suspense #57',\r\n        'characters': 'Clinton Francis Barton'\r\n    },\r\n    {\r\n        'id': 'marvel-cyclops',\r\n        'superhero': 'Cyclops',\r\n        'publisher': 'Marvel Comics',\r\n        'alter_ego': 'Scott Summers',\r\n        'first_appearance': 'X-Men #1',\r\n        'characters': 'Scott Summers'\r\n    },\r\n    {\r\n        'id': 'marvel-silver',\r\n        'superhero': 'Silver Surfer',\r\n        'publisher': 'Marvel Comics',\r\n        'alter_ego': 'Norrin Radd',\r\n        'first_appearance': 'The Fantastic Four #48',\r\n        'characters': 'Norrin Radd'\r\n    }\r\n]","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const HeroCard = ({\r\n    id,\r\n    superhero,\r\n    alter_ego,\r\n    first_appearance,\r\n    characters,\r\n}) => {\r\n    return ( \r\n        <div className=\"card ms-3\" style={{maxWidth:540}}>\r\n            <div className=\"row no-gutters\">\r\n                <div className=\"col-md-4\">\r\n                    <img src={`./assets/heroes/${id}.jpg`} className=\"card-img\"alt={superhero}/>\r\n                </div>\r\n                <div className=\"col-md-8\">\r\n                    <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">\r\n                        {superhero}\r\n                    </h5>\r\n                    <p className=\"card-text\">\r\n                        {alter_ego}\r\n                    </p>\r\n                    {\r\n                        (alter_ego !== characters) && <p className=\"card-text\">{characters}</p>\r\n                    }\r\n\r\n                    <p className=\"card-text\">\r\n                        <small className=\"text-muted\">{first_appearance}</small>\r\n                    </p>\r\n                    <Link to={`./hero/${id}`}>\r\n                        Más...\r\n                    </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}","import React, { useMemo } from 'react'\r\nimport { getHeroesByPublisher } from '../../selectors/getHeroesByPublisher'\r\nimport { HeroCard } from './HeroCard';\r\n\r\nexport const HeroList = ({publisher}) => {\r\n\r\n    const heroes = useMemo(()=> getHeroesByPublisher(publisher),[publisher]);\r\n    /* const heroes = getHeroesByPublisher(publisher); */\r\n    return (\r\n        <div className=\"card-columns animate__animated animate__fadeIn\">\r\n            {\r\n                heroes.map(hero =>(\r\n                    <HeroCard key={hero.id} {...hero} />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import { heroes } from '../data/heroes';\r\n\r\nexport const getHeroesByPublisher = (publisher) => {\r\n\r\n    const validPublisher = ['DC Comics', 'Marvel Comics'];\r\n\r\n    if (!validPublisher.includes(publisher)) {\r\n        throw new Error(`Publisher ${publisher}`);\r\n    }\r\n    return heroes.filter(hero => hero.publisher === publisher);\r\n}","import React from 'react'\r\nimport { HeroList } from '../heroes/HeroList'\r\n\r\nexport const MarvelScreen = () => {\r\n    return ( \r\n        <div>\r\n            <h1> Marvel Screen </h1> \r\n            <hr/>\r\n            <HeroList publisher=\"Marvel Comics\"/>\r\n        </div>\r\n    )\r\n}","import React, { useMemo } from 'react';\r\nimport { useParams, Redirect } from 'react-router-dom';\r\nimport {getHeroesById} from '../../selectors/getHeroesById';\r\n\r\nexport const HeroScreen = ({history}) => {\r\n    const {heroeId} = useParams();\r\n     \r\n    \r\n    const hero = useMemo(() => getHeroesById(heroeId), [heroeId]);\r\n    \r\n    if(!hero){\r\n        return <Redirect to =\"/\" />\r\n    }\r\n\r\n    const handleReturn = ()=>{\r\n        if(history.length <= 2){\r\n            history.push('/');\r\n        }else{\r\n\r\n            history.goBack();\r\n        }\r\n    }\r\n    const{\r\n        id,\r\n        superhero,\r\n        publisher,\r\n        alter_ego,\r\n        first_appearance,\r\n        characters,\r\n    } = hero;\r\n    return (\r\n        <div className=\"row mt-5\">\r\n            <div className=\"col-4\">\r\n                <img src={`../assets/heroes/${id}.jpg`} className=\"img-thumbnail animate__animated animate__fadeInLeft\" alt={superhero}/>\r\n            </div>\r\n            <div className=\"col-8\">\r\n                <h3>{superhero}</h3>\r\n                <ul className=\"list-group list-group-flush\">\r\n                    <li className=\"list-group-item\">\r\n                        <b>Alter Ego:</b>{alter_ego}\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <b>Publisher:</b>{publisher}\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <b>First Appearance:</b>{first_appearance}\r\n                    </li>\r\n                </ul>\r\n                <h5>Characters</h5>\r\n                <p>{characters}</p>\r\n                <button \r\n                onClick={handleReturn}\r\n                className=\"btn btn-outline-info\">\r\n                    Return\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { heroes } from '../data/heroes';\r\n\r\nexport const getHeroesById = (id) => {\r\n\r\n    return heroes.find(hero => hero.id === id);\r\n}","import React from 'react'\r\nimport { HeroList } from '../heroes/HeroList'\r\n\r\nexport const DsScreen = () => {\r\n    return ( \r\n    <div >\r\n        <h1> DC Screen </h1> \r\n            <hr/>\r\n        <HeroList publisher=\"DC Comics\"/>\r\n    \r\n    </div>\r\n    )\r\n}","import React, { useMemo } from 'react'\r\nimport queryString from 'query-string';\r\n\r\nimport { heroes } from '../../data/heroes';\r\nimport { HeroCard } from '../heroes/HeroCard';\r\nimport {useForm} from '../../hooks/useForm';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport {getHeroesByName} from '../../selectors/getHeroesByName';\r\n\r\nexport const SearchScreen = ({history}) => {\r\n    const location = useLocation();\r\n    const {q= ''} = queryString.parse(location.search);\r\n    console.log(q);\r\n    const initialForm = {\r\n        searchText: q\r\n    }\r\n    const [formValues, handleInputChange, reset] = useForm(initialForm);\r\n    const {searchText} = formValues;\r\n    const heroesFiltered = useMemo(()=>getHeroesByName(q), [q]);\r\n    const handleSearch = (e) =>{\r\n        e.preventDefault();\r\n        history.push(`?q=${searchText}`);\r\n    }\r\n    /* const heroesFiltered = getHeroesByName(searchText); */\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Search</h1>\r\n            <hr/>\r\n            <div className=\"row\">\r\n                <div className=\"col-5\">\r\n                    <h4>Search form</h4>\r\n                    <form onSubmit={handleSearch}>\r\n                        <input \r\n                        type=\"text\"\r\n                        placeholder=\"Find your hero\"\r\n                        className=\"form-control\"\r\n                        name=\"searchText\"\r\n                        autoComplete=\"off\"\r\n                        value={searchText}\r\n                        onChange={handleInputChange}/>\r\n                    <button \r\n                    type=\"submit\" \r\n                    className=\"btn m-1 btn-block btn-outline-primary\"\r\n                    >\r\n                        Search\r\n                    </button>\r\n                    </form>\r\n                </div>\r\n                <div className=\"col-7\">\r\n                    <h4>Results</h4>\r\n                    <hr/>\r\n                    {(q==='') \r\n                        && <div className=\"alert alert-info\">\r\n                        Search a Hero \r\n                    </div>}\r\n                    {(q!=='' && heroesFiltered.length === 0) \r\n                        && <div className=\"alert alert-warning\">\r\n                        There is no hero with {q} \r\n                    </div>}\r\n                    {\r\n                        heroesFiltered.map(hero=>(\r\n                            <HeroCard\r\n                                key={hero.id} {...hero}\r\n                            />\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from \"react\"\r\n\r\nexport const useForm = (initialState = {}) => {\r\n\r\n    const [formValues, setFormValues] = useState(initialState);\r\n    const reset = () => {\r\n        setFormValues(initialState);\r\n    }\r\n    const handleInputChange = ({ target }) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n\r\n        });\r\n    }\r\n    return [formValues, handleInputChange, reset];\r\n}","import { heroes } from \"../data/heroes\"\r\nimport { HeroScreen } from \"../components/heroes/HeroScreen\"\r\n\r\nexport const getHeroesByName = (name = '') => {\r\n    if (name === '') return [];\r\n    name = name.toLocaleLowerCase();\r\n    return heroes.filter(hero => hero.superhero.toLocaleLowerCase().includes(name));\r\n}","import React from 'react'\r\nimport { Navbar } from '../components/ui/NavBar'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport { MarvelScreen } from '../components/marvel/MarvelScreen'\r\nimport { HeroScreen } from '../components/heroes/HeroScreen'\r\nimport {DsScreen} from '../components/dc/DsScreen'\r\nimport { SearchScreen } from '../components/search/SearchScreen'\r\n \r\nexport const DashboardRoutes = ({history}) => {\r\n    return (\r\n        <>\r\n          <Navbar/>\r\n            <div className=\"container\">\r\n                <Switch>\r\n                    <Route exact path=\"/marvel\" component={MarvelScreen}/>\r\n                    <Route exact path=\"/hero/:heroeId\" component={HeroScreen}/>\r\n                    <Route exact path=\"/dc\" component={DsScreen}/>\r\n                    <Route exact path =\"/search\" component = {SearchScreen}/>\r\n                    <Redirect to='/marvel'/>\r\n                </Switch>\r\n            </div>  \r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\nexport const PrivateRoute = ({\r\n    isAuthenticated, \r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    \r\n    localStorage.setItem('lastPath', rest.location.pathname);\r\n    return (\r\n        <Route {...rest}\r\n            component={ (props)=>(\r\n                (isAuthenticated)\r\n                ? (<Component {...props}/>)\r\n                : (<Redirect to =\"/login\"/>)\r\n\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated : PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\nexport const PublicRoute = ({\r\n        isAuthenticated,\r\n        component: Component,\r\n        ...rest\r\n    }) => {\r\n        return ( \r\n            <Route {...rest }\r\n            component = {\r\n                (props) => (\r\n                    (!isAuthenticated) \r\n                    ?( <Component {...props }/>)\r\n                    :( <Redirect to = \"/\" / > )\r\n\r\n                    )\r\n                }\r\n                />\r\n            )\r\n        }\r\n\r\n        PublicRoute.propTypes = {\r\n            isAuthenticated: PropTypes.bool.isRequired,\r\n            component: PropTypes.func.isRequired\r\n        }","import React, { useContext } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport { LoginScreen } from \"../components/login/LoginScreen\";\r\nimport { DashboardRoutes } from \"./DashboardRoutes\";\r\nimport { PrivateRoute } from \"./PrivateRoute\";\r\nimport { AuthContext } from \"../auth/AuthContext\";\r\nimport { PublicRoute } from \"./PublicRoute\";\r\n\r\nexport const AppRouter = () => {\r\n    const {user} = useContext(AuthContext);\r\n\r\n\r\n    return (\r\n        <Router>\r\n        <div>\r\n        <Switch>\r\n            <PublicRoute exact path=\"/login\" component={LoginScreen} isAuthenticated={user.logged}/>\r\n            <PrivateRoute  path=\"/\" component={DashboardRoutes} isAuthenticated={user.logged}/>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n/* \r\nconst state = {\r\n    name= 'Cristian',\r\n    logged: true\r\n} */\r\n\r\n\r\nexport const authReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case types.login:\r\n            return {\r\n                ...action.payload,\r\n                logged: true\r\n            }\r\n            break;\r\n        case types.logout:\r\n            return {\r\n                logged: false\r\n            }\r\n            break;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import React, { useReducer, useEffect } from 'react'\r\nimport { AppRouter } from './routers/AppRouter'\r\nimport { AuthContext } from './auth/AuthContext'\r\nimport { authReducer } from './auth/authReducer'\r\n\r\nconst init = () => {\r\n    return JSON.parse(localStorage.getItem('user')) || { logged: false };\r\n}\r\n\r\nexport const HeroesApp = () => {\r\n    const [user, dispatch] = useReducer(authReducer, {}, init);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n    }, [user])\r\n\r\n    return ( \r\n        <AuthContext.Provider value = {\r\n            { user, dispatch } } >\r\n        <AppRouter/>\r\n\r\n        </AuthContext.Provider>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HeroesApp } from './HeroesApp';\n\n\nReactDOM.render(\n    <HeroesApp />,  \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}